=pod

=encoding UTF-8

=head1 NAME

DBIx::Squirrel::db - DBI database handle (DBI::db) subclass

=head1 VERSION

2020.11.00

=head1 SYNOPSIS

    $rows = $dbh->do($statement);
    $rows = $dbh->do($statement, \%attr);
    $rows = $dbh->do($statement, @bind_values);
    $rows = $dbh->do($statement, \@bind_values);
    $rows = $dbh->do($statement, %bind_values);
    $rows = $dbh->do($statement, \%attr, @bind_values);
    $rows = $dbh->do($statement, \%attr, \@bind_values);
    $rows = $dbh->do($statement, \%attr, %bind_values);
    $rows = $dbh->do($statement, \%attr, \%bind_values);

    ($rows, $sth) = $dbh->do($statement);
    ($rows, $sth) = $dbh->do($statement, \%attr);
    ($rows, $sth) = $dbh->do($statement, @bind_values);
    ($rows, $sth) = $dbh->do($statement, \@bind_values);
    ($rows, $sth) = $dbh->do($statement, %bind_values);
    ($rows, $sth) = $dbh->do($statement, \%attr, @bind_values);
    ($rows, $sth) = $dbh->do($statement, \%attr, \@bind_values);
    ($rows, $sth) = $dbh->do($statement, \%attr, %bind_values);
    ($rows, $sth) = $dbh->do($statement, \%attr, \%bind_values);

    $sth = $dbh->prepare($statement);
    $sth = $dbh->prepare($statement, \%attr);

    $sth = $dbh->prepare_cached($statement);
    $sth = $dbh->prepare_cached($statement, \%attr);

    $itor = $dbh->iterate($statement);
    $itor = $dbh->iterate($statement, \%attr);
    $itor = $dbh->iterate($statement, @bind_values);
    $itor = $dbh->iterate($statement, \@bind_values);
    $itor = $dbh->iterate($statement, %bind_values);
    $itor = $dbh->iterate($statement, \%attr, @bind_values);
    $itor = $dbh->iterate($statement, \%attr, \@bind_values);
    $itor = $dbh->iterate($statement, \%attr, %bind_values);
    $itor = $dbh->iterate($statement, \%attr, \%bind_values);

    $rs = $dbh->resultset($statement);
    $rs = $dbh->resultset($statement, \%attr);
    $rs = $dbh->resultset($statement, @bind_values);
    $rs = $dbh->resultset($statement, \@bind_values);
    $rs = $dbh->resultset($statement, %bind_values);
    $rs = $dbh->resultset($statement, \%attr, @bind_values);
    $rs = $dbh->resultset($statement, \%attr, \@bind_values);
    $rs = $dbh->resultset($statement, \%attr, %bind_values);
    $rs = $dbh->resultset($statement, \%attr, \%bind_values);

=head1 DESCRIPTION

This module subclasses DBI's DBI::db module, providing a number of progressive
and additive enhancements to database handle objects:

=over

=item * statement and cached statement preparation;

=item * combined statement preparation and execution;

=item * the creation of result set iterators.

=back


=cut

=head1 METHODS

=head2 do

    $rows = $dbh->do($statement);
    $rows = $dbh->do($statement, \%attr);
    $rows = $dbh->do($statement, \%attr, @bind_values);

    $rows = $dbh->do($statement, @bind_values);
    $rows = $dbh->do($statement, \@bind_values);
    $rows = $dbh->do($statement, %bind_values);
    $rows = $dbh->do($statement, \%attr, \@bind_values);
    $rows = $dbh->do($statement, \%attr, %bind_values);
    $rows = $dbh->do($statement, \%attr, \%bind_values);

    ($rows, $sth) = $dbh->do($statement);
    ($rows, $sth) = $dbh->do($statement, \%attr);
    ($rows, $sth) = $dbh->do($statement, @bind_values);
    ($rows, $sth) = $dbh->do($statement, \@bind_values);
    ($rows, $sth) = $dbh->do($statement, %bind_values);
    ($rows, $sth) = $dbh->do($statement, \%attr, @bind_values);
    ($rows, $sth) = $dbh->do($statement, \%attr, \@bind_values);
    ($rows, $sth) = $dbh->do($statement, \%attr, %bind_values);
    ($rows, $sth) = $dbh->do($statement, \%attr, \%bind_values);


=cut

=head2 prepare

    $sth = $dbh->prepare($statement);
    $sth = $dbh->prepare($statement, \%attr);


=cut

=head2 prepare_cached

    $sth = $dbh->prepare_cached($statement);
    $sth = $dbh->prepare_cached($statement, \%attr);
    $sth = $dbh->prepare_cached($original_sth);
    $sth = $dbh->prepare_cached($original_sth, \%attr);


=cut

=head2 iterate

    $itor = $dbh->iterate($statement);
    $itor = $dbh->iterate($statement, \%attr);
    $itor = $dbh->iterate($statement, @bind_values);
    $itor = $dbh->iterate($statement, \@bind_values);
    $itor = $dbh->iterate($statement, %bind_values);
    $itor = $dbh->iterate($statement, \%attr, @bind_values);
    $itor = $dbh->iterate($statement, \%attr, \@bind_values);
    $itor = $dbh->iterate($statement, \%attr, %bind_values);
    $itor = $dbh->iterate($statement, \%attr, \%bind_values);


=cut

=head2 it

An alias for C<iterate>


=cut

=head2 resultset

    $rs = $dbh->resultset($statement);
    $rs = $dbh->resultset($statement, \%attr);
    $rs = $dbh->resultset($statement, @bind_values);
    $rs = $dbh->resultset($statement, \@bind_values);
    $rs = $dbh->resultset($statement, %bind_values);
    $rs = $dbh->resultset($statement, \%attr, @bind_values);
    $rs = $dbh->resultset($statement, \%attr, \@bind_values);
    $rs = $dbh->resultset($statement, \%attr, %bind_values);
    $rs = $dbh->resultset($statement, \%attr, \%bind_values);


=cut

=head2 result_set

An alias for C<resultset>


=cut

=head2 rs

An alias for C<resultset>


=cut

=head1 AUTHOR

I Campbell E<lt>cpanic@cpan.orgE<gt>

=head1 COPYRIGHT AND LICENSE

This software is copyright (c) 2020 by I Campbell.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.


=cut

